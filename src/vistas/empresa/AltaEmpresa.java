/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.empresa;

import vistas.empleado.*;
import pojo.Empleado;
import novedades.dao.imp.EmpleadoDaoImp;
import hibernateUtil.Conexion;
import java.util.List;
import javax.swing.JOptionPane;
import novedades.dao.imp.EmpresaDaoImp;
import novedades.dao.imp.SucursalDaoImp;
import org.hibernate.Criteria;
import org.hibernate.Session;
import pojo.Empresa;
import pojo.Sucursal;

/**
 *
 * @author Leo
 */
public class AltaEmpresa extends javax.swing.JDialog {
//    public static final int MENU =1;
    public static final int GESTOR_EMPLEADO =1;
    Empresa e = null;
    int codigo;
    private boolean BotonGuardarSelecciono=false;

    public boolean isBotonGuardarSelecciono() {
        return BotonGuardarSelecciono;
    }
    
    
    public AltaEmpresa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btneEliminar.setVisible(false);
        btneEliminar.setEnabled(false);
        this.setTitle("NUEVO EMPRESA");
        setLocationRelativeTo(this);
        setVisible(true);

    }
    
    public AltaEmpresa(java.awt.Frame parent, boolean modal,int codigo) {
        super(parent, modal);
        initComponents();
        this.codigo = codigo;
        btneEliminar.setVisible(true);
        this.setTitle("EDITAR EMPRESA");
//        configurarParaEditar();
        setLocationRelativeTo(this); 
        setVisible(true);
        // no se realizara la carga de foto
       
        
        
    }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elegirFichero = new javax.swing.JFileChooser();
        pnlPrincipal = new org.edisoncor.gui.panel.Panel();
        btnGuardar = new org.edisoncor.gui.button.ButtonIpod();
        btneEliminar = new org.edisoncor.gui.button.ButtonIpod();
        btnCancelar = new org.edisoncor.gui.button.ButtonIpod();
        labelMetric11 = new org.edisoncor.gui.label.LabelMetric();
        txtGerente = new org.edisoncor.gui.textField.TextFieldRoundIcon();
        txtDenominacion = new org.edisoncor.gui.textField.TextFieldRoundIcon();
        labelMetric10 = new org.edisoncor.gui.label.LabelMetric();
        labelMetric9 = new org.edisoncor.gui.label.LabelMetric();
        txtCodigo = new org.edisoncor.gui.textField.TextFieldRoundIcon();
        labelMetric14 = new org.edisoncor.gui.label.LabelMetric();
        txtMail = new org.edisoncor.gui.textField.TextFieldRoundIcon();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlPrincipal.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EMPLEADO", 2, 2, new java.awt.Font("Calibri", 1, 24), new java.awt.Color(204, 204, 204))); // NOI18N
        pnlPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/textura-metallica-2.jpg"))); // NOI18N

        btnGuardar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/GUARDAR.png"))); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.setAnimacion(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btneEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btneEliminar.setText("ELIMINAR");
        btneEliminar.setAnimacion(false);
        btneEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        btnCancelar.setText("ATRAS");
        btnCancelar.setAnimacion(false);
        btnCancelar.setDistanciaDeSombra(45);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        labelMetric11.setText("GERENTE");

        txtGerente.setBackground(new java.awt.Color(102, 102, 102));
        txtGerente.setBorder(null);
        txtGerente.setForeground(new java.awt.Color(255, 255, 255));
        txtGerente.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGerente.setColorDeBorde(new java.awt.Color(255, 102, 0));
        txtGerente.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        txtDenominacion.setBackground(new java.awt.Color(102, 102, 102));
        txtDenominacion.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtDenominacion.setForeground(new java.awt.Color(255, 255, 255));
        txtDenominacion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDenominacion.setCaretColor(new java.awt.Color(255, 102, 0));
        txtDenominacion.setColorDeBorde(new java.awt.Color(255, 102, 0));
        txtDenominacion.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        labelMetric10.setText("DENOMINACION");

        labelMetric9.setText("CODIGO");

        txtCodigo.setBackground(new java.awt.Color(255, 255, 0));
        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCodigo.setColorDeBorde(new java.awt.Color(255, 102, 0));
        txtCodigo.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });
        txtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoFocusLost(evt);
            }
        });
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        labelMetric14.setText("MAIL GERENTE");

        txtMail.setBackground(new java.awt.Color(102, 102, 102));
        txtMail.setBorder(null);
        txtMail.setForeground(new java.awt.Color(255, 255, 255));
        txtMail.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMail.setColorDeBorde(new java.awt.Color(255, 102, 0));
        txtMail.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(labelMetric9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(236, 236, 236)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(btneEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                .addComponent(labelMetric10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)
                                .addComponent(txtDenominacion, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnlPrincipalLayout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addComponent(labelMetric11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(146, 146, 146)
                                    .addComponent(txtGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPrincipalLayout.createSequentialGroup()
                                    .addComponent(labelMetric14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMetric9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMetric10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDenominacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMetric11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGerente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMetric14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btneEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        permitirSoloNumero(evt);
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed

    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoFocusLost

        //        //validar el empleado
        //
        //         try{
            //        Empleado e = new EmpleadoDaoImp().getEmpleado(Integer.parseInt(txtLegajo.getText()));
            //         if (e!=null) {
                //            JOptionPane.showMessageDialog(rootPane, "EL LEGAJO YA EXISTE, INTENTE NUEVAMENTE", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
                //            txtLegajo.setText("");
                //            txtLegajo.requestFocus();
                //        }else{
                //             // es uno legajo nuevo , por defecto la clave sera la misma que su legajo
                //             txtClave.setText(txtLegajo.getText());
                //             txtClaveRepetir.setText(txtLegajo.getText());
                //             txtApellido.requestFocus();
                //         }
            //        }catch(Exception eee){
            //            if (!btnCancelarOperacion.isEnabled() ||txtLegajo.getText().trim().isEmpty() ) {
                //            mensajero.mensajeError(this, "NO PUEDE ESTAR VACIEO EL CAMPO LEGAJO");
                //            txtLegajo.setText("");
                //            txtLegajo.requestFocus();
                //        }
            //        }
    }//GEN-LAST:event_txtCodigoFocusLost

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // cancela la operacion actual
        txtCodigo.setEnabled(false);//  esto  es para que no capture el evento foculost de txtlegajo
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btneEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneEliminarActionPerformed
        int resp =JOptionPane.showConfirmDialog(rootPane,"ESTA SEGURO QUE DESEA ELIMINAR LA EMPRESA: \n"+txtCodigo.getText()+"-"+txtDenominacion.getText()+" ?", "ELIMINAR EMPLEADO",JOptionPane.OK_CANCEL_OPTION);
        if (resp==JOptionPane.OK_OPTION) {
            Empresa emp = new EmpresaDaoImp().getEmpresa(codigo);
            new EmpresaDaoImp().deleteEmpresa(emp);
            JOptionPane.showMessageDialog(rootPane, "LA ELIMINACION SE REALIZO CORRECTAMENTE ", "INFORMACION", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
    }//GEN-LAST:event_btneEliminarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

            if (codigo==0) {
                // nuevo empleado
                System.out.println("entro en nuevo");                
                
                if(validarEmpresaNueva()){
                    System.out.println(validarEmpresaNueva());
                    Empresa emp = getDatosEmpresa();
                    new EmpresaDaoImp().addEmpresa(emp);
                    this.dispose();
                }
                
            } else {
                //actualizar empleado
                System.out.println("entro a modificar");                
                
                if (validarEmpresaActulizada()) {
                    //obtengos los datos y creo el empelado
                    Empresa e = getDatosEmpresa();
                
                    if (codigo != Integer.parseInt(txtCodigo.getText().trim())) {
                        Empresa o = new EmpresaDaoImp().getEmpresa(codigo);
                        List<Empresa> lista =new EmpresaDaoImp().listarEmpresa();
                        new EmpresaDaoImp().upDateEmpresa(e);
                        // aqui va borrar el empleado o   porque se modiico la clave primario
                        new EmpresaDaoImp().deleteEmpresa(o);
                        Empresa emplUp = new EmpresaDaoImp().getEmpresa(e.getCodEmp());
                    }else{
                        new EmpresaDaoImp().upDateEmpresa(e);

                    }
                    this.dispose();
                }

            }
    }//GEN-LAST:event_btnGuardarActionPerformed
     
    private void permitirSoloNumero(java.awt.event.KeyEvent evt) {
          // permitir solo el ingreso de numero
        char caracter = evt.getKeyChar();
        if(((caracter < '0') ||(caracter > '9')) && (caracter != '\b' /*corresponde a BACK_SPACE*/)){
         evt.consume();  // ignorar el evento de teclado
      }
    }    
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIpod btnCancelar;
    private org.edisoncor.gui.button.ButtonIpod btnGuardar;
    private org.edisoncor.gui.button.ButtonIpod btneEliminar;
    private javax.swing.JFileChooser elegirFichero;
    private org.edisoncor.gui.label.LabelMetric labelMetric10;
    private org.edisoncor.gui.label.LabelMetric labelMetric11;
    private org.edisoncor.gui.label.LabelMetric labelMetric14;
    private org.edisoncor.gui.label.LabelMetric labelMetric9;
    private org.edisoncor.gui.panel.Panel pnlPrincipal;
    private org.edisoncor.gui.textField.TextFieldRoundIcon txtCodigo;
    private org.edisoncor.gui.textField.TextFieldRoundIcon txtDenominacion;
    private org.edisoncor.gui.textField.TextFieldRoundIcon txtGerente;
    private org.edisoncor.gui.textField.TextFieldRoundIcon txtMail;
    // End of variables declaration//GEN-END:variables

     private void limpiarVenanaEmpleado() {
       txtDenominacion.setText("");
       txtCodigo.setText("");
       txtGerente.setText("");
       //BOTON
      // btnGuardar.setEnabled(true);
       btneEliminar.setEnabled(false);
       // falta par aque  el cursor se situe en el campo legajo por defecyto
       txtCodigo.requestFocus();
    }
       
    public boolean validarEmpresaActulizada(){
        boolean todoOk=true;
        Empresa empOriginal = new EmpresaDaoImp().getEmpresa(codigo); 
        System.out.println("empleado original "+empOriginal.getCodEmp());
        if (empOriginal.getCodEmp() != Integer.parseInt(txtCodigo.getText().trim())) {
             // el empleado modifico el legajo
            Empresa empLeg = new EmpresaDaoImp().getEmpresa(Integer.parseInt(txtCodigo.getText().trim()));  
            if (empLeg!=null) {
                 todoOk = false;
                 JOptionPane.showMessageDialog(this, "LA EMPRESA YA EXISTE");
             }
         }
        return todoOk;
     }
     
     public boolean validarEmpresaNueva(){
         boolean todoOk=false;
         try{
             Empresa empLeg = new EmpresaDaoImp().getEmpresa(Integer.parseInt(txtCodigo.getText().trim()));
             System.out.println("Variable empLeg: "+empLeg);

                 if (empLeg ==null){
                     todoOk= true;
                 }else{
                     if (empLeg!=null) {
                       JOptionPane.showMessageDialog(this, "LA EMPRESA YA EXISTE");
                    } 
                 }
                 
           }catch(Exception ex){
              JOptionPane.showMessageDialog(this, "EL CAMPO CODIGO NO PUEDE ESTAR VACIO");
              todoOk=false;
         }   
         return todoOk;
     }
     
     public Empresa getDatosEmpresa(){
        e = new Empresa();
        e.setCodEmp(Integer.parseInt(txtCodigo.getText()));
        e.setNombre(txtDenominacion.getText());
        e.setGerente(txtGerente.getText());
        e.setMailGerente(txtMail.getText());
        return e;
     }
     
//    private void configurarParaEditar() {
//        Empresa emp = new EmpresaDaoImp().getEmpresa(codigo);
//        txtCodigo.setText(String.valueOf(emp.getCodEmp()));
//        txtDenominacion.setText(e.getNombre());
//        txtGerente.setText(e.getGerente());
//    }
}
