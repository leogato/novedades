/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.concepto;

import hibernateUtil.Conexion;
import vistas.empleado.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import novedades.dao.imp.ConceptoDaoImp;
import org.hibernate.Session;
import pojo.Concepto;
import pojo.Usuario;

/**
 *
 * @author LEO
 */
public class GestorConcepto extends javax.swing.JDialog {
    public static final int VENTANA_GESTOR_ASISTENCIA=1;
    public static final int MENU=2;
    public   boolean isModificar = false;// paramentro global uso: para ver si se presiono un boton agregar o moficar
                                         // sirve para configuarar ventnana infomracion  empleado
    
    private DefaultTableModel modelo;
    private List<Concepto> listaConcepto;
    private boolean seleccionado;
    private int cod_con;
    int quienloyamo;
    java.awt.Frame parent;// indica quien es el padre. me sirve para pasar el icono de la aplcacion
  //  EmpleadoDao empleados ;
   
    public GestorConcepto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        initComponentesVentana();    
        this.setTitle("MODIFICACION DE CONCEPTO");
        setLocationRelativeTo(this);
        setVisible(true);
        
        
    }
    public GestorConcepto(java.awt.Frame parent, boolean modal,int quienloyamo) {
        super(parent, modal);
        this.parent = parent;
        this.quienloyamo = quienloyamo;
        initComponents();
        this.setTitle("ALTA DE CONCEPTOS");
        if (MENU == quienloyamo) {
            //boton seleccionar no debe aparecer
        }else{
           // buscador de empleado
            this.setSize(this.getWidth(),this.getHeight()-btnModificar.getWidth() );
            btnNuevo.setVisible(false);
            btnModificar.setVisible(false);
            btnAtras.setVisible(false);
        }
        initComponentesVentana();  
        setLocationRelativeTo(this);
        setVisible(true);
    }

    public void initComponentesVentana(){
        //empleados = new EmpleadoDaoImp();
        cargarTablaConConcepto();
                
        btnModificar.setEnabled(false);
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        btnModificar = new org.edisoncor.gui.button.ButtonIpod();
        btnNuevo = new org.edisoncor.gui.button.ButtonIpod();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblConcepto = new javax.swing.JTable();
        btnAtras = new org.edisoncor.gui.button.ButtonIpod();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)), "GESTOR DE CONCEPTOS", 2, 2, new java.awt.Font("Calibri", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        panel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/textura-metallica-2.jpg"))); // NOI18N

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Editar.png"))); // NOI18N
        btnModificar.setText("MODIFIC");
        btnModificar.setAnimacion(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/adduser.png"))); // NOI18N
        btnNuevo.setText("NUEVO");
        btnNuevo.setAnimacion(false);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        tblConcepto.setBackground(new java.awt.Color(0, 0, 0));
        tblConcepto.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblConcepto.setForeground(new java.awt.Color(255, 255, 255));
        tblConcepto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DESCRIPCION", "TIPO", "CARGA USUARIO"
            }
        ));
        tblConcepto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConceptoMouseClicked(evt);
            }
        });
        tblConcepto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblConceptoKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblConcepto);

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/atras.png"))); // NOI18N
        btnAtras.setText("ATRAS");
        btnAtras.setAnimacion(false);
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean isBotonSeleccionado() {
        return seleccionado;
    }

    public int getLegajo() {
        return cod_con;
    }

    
    
      
    private void buttonIpod1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIpod1ActionPerformed
    }//GEN-LAST:event_buttonIpod1ActionPerformed

    private void buttonIpod2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIpod2ActionPerformed
     
    }//GEN-LAST:event_buttonIpod2ActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void tblConceptoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConceptoMouseClicked
           int fila = tblConcepto.getSelectedRow();
        if (fila!= -1) {
            btnModificar.setEnabled(true);  
        }
    }//GEN-LAST:event_tblConceptoMouseClicked

    private void tblConceptoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblConceptoKeyPressed
//        if (!isModificar) {
//           if (evt.getKeyCode()==KeyEvent.VK_ENTER){
//        int fila = tblEmpleado.getSelectedRow();
//        if (fila!= -1) {
//        modelo =(DefaultTableModel)tblEmpleado.getModel();
//        legajo = Integer.parseInt(modelo.getValueAt(fila, 0).toString());
//            if (quienloyamo==MENU) {
//                 Empleado empleado = new EmpleadoDaoImp().getEmpleado(legajo);
//                 System.out.println(empleado.getApellido());
//                 btnModificar.setEnabled(true);    
//            }
//       
//        }
//       }
            
//        }
        
        
    }//GEN-LAST:event_tblConceptoKeyPressed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        
        int fila = tblConcepto.getSelectedRow();
        if (fila!= -1) {
            cod_con = (Integer) tblConcepto.getModel().getValueAt(tblConcepto.getSelectedRow(), 0);
            //LLAMAR A A LA VENTANA NUEVO EMPLEADO PARA EDITAR
            AbmConceptos EditConcepto = new AbmConceptos(parent, true, cod_con);
            cargarTablaConConcepto();    
        }else{
            JOptionPane.showMessageDialog(null, "Debes seleccionar un Concepto de la Tabla");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        AbmConceptos concepto = new AbmConceptos(parent, true);
            cargarTablaConConcepto();
        
         
    }//GEN-LAST:event_btnNuevoActionPerformed
      private void permitirSoloNumero(java.awt.event.KeyEvent evt) {
//          // permitir solo el ingreso de numero
//         char caracter = evt.getKeyChar();
//        if(((caracter < '0') ||
//         (caracter > '9')) &&
//         (caracter != '\b' /*corresponde a BACK_SPACE*/))
//      {
//         evt.consume();  // ignorar el evento de teclado
//      }
       
     }    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.edisoncor.gui.button.ButtonIpod btnAtras;
    private org.edisoncor.gui.button.ButtonIpod btnModificar;
    private org.edisoncor.gui.button.ButtonIpod btnNuevo;
    private javax.swing.JScrollPane jScrollPane2;
    private org.edisoncor.gui.panel.Panel panel1;
    private javax.swing.JTable tblConcepto;
    // End of variables declaration//GEN-END:variables

    /**
     * PREPERARA Y CARAGA LA TABLA EMPLEADO CON DATOS 
     */
    private void cargarTablaConConcepto() {
       listaConcepto = new ConceptoDaoImp().listarConcepto();
       util.TablaUtil.prepararTablaConcepto(modelo, tblConcepto);
       util.TablaUtil.cargarModeloConcepto(modelo, listaConcepto, tblConcepto);
    }

    private List<Usuario> filtrarPorNombreUsuario(List<Usuario> listaUsuarios, String text) {
         List<Usuario> list = new ArrayList<Usuario>();
         for (Usuario usuario : listaUsuarios) {
             if (usuario.getEmpleado().getApellido().contains(text)||usuario.getEmpleado().getNombre().contains(text)) {
                 list.add(usuario);
             }
        }
         return list;
    }
    private List<Usuario> filtrarPorLegajoEmpleado(List<Usuario> listaUsuario, String text) {
         List<Usuario> list = new ArrayList<Usuario>();
         for (Usuario usuario : listaUsuario) {
             if (String.valueOf(usuario.getEmpleado().getLegajo()).contains(text)) {
                 list.add(usuario);
             }
        }
         return list;
    }

   /**
    * 
    * @param logico indica que los componetnes estara o no editables
    * @param isModificado indica si se va a editar para agregar o modificar un empleado existente
    * en caso de que sea un empleado existente las cajas legajo,clave,y repertir clave se mantendran no editable
    */
     
     private void prepararParaModificar(){
          
       
            //boton agregar no activar
            btnNuevo.setEnabled(false);
            btnModificar.setEnabled(false);
        
     }
     private void prepararParaAgregar(){

          //boton modificar no activo
          btnModificar.setEnabled(false);
           btnNuevo.setEnabled(false);
     }

     private void cargo(){//CARGA LA TABLA DE UNA U OTRA FORMA DEPENDIENDO SI HAY ALGUNA NOVEDAD CARGADA ESA FECHA PARA ESA SUCURSAL O NO
        List<Concepto> con;
        Session session = Conexion.getSession();
        session.beginTransaction();
        String sql = "from Concepto as c\n" +
                     "where c.estado = true";
        con = (List<Concepto>)session.createQuery(sql).list();
        session.getTransaction().commit();
        session.close();
        
    }

     
}
